# while True:
#     def add(x, y):
#         return x + y
    
#     def subtract(x, y):
#         return x - y
    
#     def multiply(x, y):
#         return x * y
    
#     def divide(x, y):
#         return x / y
    
#     num1 = float(input("Введите первое число: "))
#     num2 = float(input("Введите второе число: "))
    
#     print("Выберите операцию:")
#     print("1. Сложение")
#     print("2. Вычитание")
#     print("3. Умножение")
#     print("4. Деление")
    
#     choice = input("Введите номер операции (1/2/3/4): ")
    
#     if choice == '1':
#         result = add(num1, num2)
#         operation = '+'
#     elif choice == '2':
#         result = subtract(num1, num2)
#         operation = '-'
#     elif choice == '3':
#         result = multiply(num1, num2)
#         operation = '*'
#     elif choice == '4':
#         result = divide(num1, num2)
#         operation = '/'
#     else:
#         print("Неверный ввод")
#         exit()

#     print(f"{num1} {operation} {num2} = {result}")


# dict_ = {'a': None, 'b': 1, 'c': 2, 'd': None, 'e': 3}
# dict_ = {k: v for v in dict_ if v <= 0}
# print(dict_)



"""1) Дан словарь, оставьте все элементы с пустыми значениями, остальные УДАЛИТЕ
 dict_ = {'a': None, 'b': 1, 'c': 2, 'd': None, 'e': 3}
Вывод:
{'a': None, 'd': None}"""

# dict_ = {'a': None, 'b': 1, 'c': 2, 'd': None, 'e': 3}
# result = {}

# for key, value in dict_.items():
#     if value is None:
#         result[key] = value

# print(result)


"""2) Даны два списка одинаковой длины. Необходимо создать из них словарь таким образом, чтобы элементы первого списка были ключами, а элементы второго — соответственно значениями нашего словаря

list1 = [1, 2, 3, 4, 5, 6, 7]
list2 = ['one', 'two', 'three', 'four', 'five', 'six', 'seven']

dict_ = {}

Вывод:

{1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven'}"""

# keys = [1, 2, 3, 4, 5, 6, 7]
# values = ['one', 'two', 'three', 'four', 'five', 'six', 'seven']

# d = {}
# for i in range(len(keys)):
#     d[keys[i]] = values[i]

# print(d)


"""3) Создайте два множества a, b.
С помощью определенного метода или оператора найдите разницу множеств.
Распечатайте результат.
Для множеств {2, 4, 6, 50, -45, -6} и {4, 3, 5, -5, -6}, результат будет:

{2, -45, 50, 6} """

# a = {2, 4, 6, 50, -45, -6}
# b = {4, 3, 5, -5, -6}
# print(a - b)
"""4) Четверо коллег tilek, timur, alexander, elina собрались на обед.

Но они не могут решить, где им пообедать, так как у каждого свои вкусовые предпочтения. Помогите найти им выход в данной ситуации.

Данные:

Тилек хочет покушать в "Dodo" или в "ImperiaPizza", ну или в крайнем случае "FreshBox".
Тимур хочет покушать шашлык в "OchakKebab" или рамен в "FreshBox".
Александр очень хочет вафли с "FreshBox" либо "KFC".
Элину устраивает любой из вариантов.
Для решения, создайте множества с названиями ресторанов в переменных-именах, например:

tilek = {'Dodo', 'ImperiaPizza' . . .} 
и используя методы множеств, выведите название ресторана который подходит для всех коллег."""

#писать код

"""5) Создать три целых числа x, y, z.
Выведите значение наименьшего из них.
К примеру, если в переменных у нас числа: 102, 36, 90, вывод в терминал будет
36 
"""

# x = int(input())
# y = int(input())
# z = int(input())
# print(min(x, y, z))
"""6) Дана строка string из 6-ти цифр записанных не через пробел.
Проверьте, что сумма первых трех цифр равняется сумме вторых трех цифр. Если это так - выведите 'да', в противном случае выведите 'нет'."""

# string1 = "123456"
# res = string1[0] + string1[1]
#   print(res)


"""7) Написать программу, которая будет принимать от пользователя числа через запятую, без пробелов.
числа поместить в список list_ и вывести в отсортированном виде.
Числа переданные во вкладке INPUT сохраняются в строковом типе данных.

Поэтому, к примеру, для чисел 15,364,27,2 отсортированный список будет выглядеть так:

['15', '2', '27', '364'] 
"""

# numbers = input("Введите числа через запятую: ")
# list_ = numbers.split(',')
# list_ = sorted(list_)
# print(list_)

"""8) Дан список с кортежами, выведите список без пустых кортежей
Например:

tuples = [(), ('ram','15','8'), (), ('laxman', 'sita')]
Результат:

cleared_tuples = [('ram','15','8'), ('laxman', 'sita')]
"""
#писать код

# a=2
# while True:
#     a= a * 2
#     print(a)

def findLen(str):
    counter = 0
    while str[counter:]:
        counter += 1
    return counter

str = 'hello'
print(findLen(str))